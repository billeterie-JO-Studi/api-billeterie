version: '3'
services:
  studi-api:
    container_name: studi-api
    build: 
      context: .
      dockerfile: Dockerfile.prod
    image: studi-api:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: studi-apiDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
      TOKEN_STRIPE: ${TOKEN_STRIPE}
      ENDPOINT_SECRET_STRIPE: ${ENDPOINT_SECRET_STRIPE}

    ports:
      - '1337:1337'
    networks:
      - studi-api
    depends_on:
      - studi-apiDB
      
  studi-apiDB:
    container_name: studi-apiDB
    restart: unless-stopped
    env_file: .env
    image: mariadb:latest
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_HOST: '%'
    volumes:
      - studi-api-data:/var/lib/mysql
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - '3306:3306'
    networks:
      - studi-api
      
  studi-apiAdminer:
    container_name: studi-apiAdminer
    image: adminer
    restart: unless-stopped
    ports:
      - '9090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=studi-apiDB
    networks:
      - studi-api
    depends_on:
      - studi-apiDB

volumes:
  studi-api-data:

networks:
  studi-api:
    name: Studi-api
    driver: bridge
